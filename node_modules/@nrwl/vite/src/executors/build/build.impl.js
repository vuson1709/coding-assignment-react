"use strict";
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: ()=>viteBuildExecutor
});
const _extends = require("@swc/helpers/lib/_extends.js").default;
require("dotenv/config");
const _vite = require("vite");
const _optionsUtils = require("../../utils/options-utils");
const _js = require("@nrwl/js");
const _fs = require("fs");
const _path = require("path");
async function viteBuildExecutor(options, context) {
    const projectRoot = context.projectsConfigurations.projects[context.projectName].root;
    const buildConfig = (0, _vite.mergeConfig)((0, _optionsUtils.getViteSharedConfig)(options, false, context), {
        build: (0, _optionsUtils.getViteBuildOptions)(options, context)
    });
    await runInstance(buildConfig);
    const libraryPackageJson = (0, _path.resolve)(projectRoot, 'package.json');
    const rootPackageJson = (0, _path.resolve)(context.root, 'package.json');
    // For buildable libs, copy package.json if it exists.
    if ((0, _fs.existsSync)(libraryPackageJson) && rootPackageJson !== libraryPackageJson) {
        await (0, _js.copyAssets)({
            outputPath: options.outputPath,
            assets: [
                {
                    input: projectRoot,
                    output: '.',
                    glob: 'package.json'
                }
            ]
        }, context);
    }
    return {
        success: true
    };
}
function runInstance(options) {
    return (0, _vite.build)(_extends({}, options));
}

//# sourceMappingURL=build.impl.js.map