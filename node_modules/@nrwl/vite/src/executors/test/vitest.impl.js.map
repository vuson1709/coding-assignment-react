{"version":3,"sources":["../../../../../../packages/vite/src/executors/test/vitest.impl.ts"],"sourcesContent":["import { ExecutorContext } from '@nrwl/devkit';\nimport { File, Reporter } from 'vitest';\nimport { VitestExecutorOptions } from './schema';\n\nclass NxReporter implements Reporter {\n  deferred: {\n    promise: Promise<boolean>;\n    resolve: (val: boolean) => void;\n  };\n\n  constructor(private watch: boolean) {\n    this.setupDeferred();\n  }\n\n  async *[Symbol.asyncIterator]() {\n    do {\n      const hasErrors = await this.deferred.promise;\n      yield { hasErrors };\n      this.setupDeferred();\n    } while (this.watch);\n  }\n\n  private setupDeferred() {\n    let resolve: (val: boolean) => void;\n    this.deferred = {\n      promise: new Promise((res) => {\n        resolve = res;\n      }),\n      resolve,\n    };\n  }\n\n  onFinished(files: File[], errors?: unknown[]) {\n    const hasErrors =\n      files.some((f) => f.result?.state === 'fail') || errors?.length > 0;\n    this.deferred.resolve(hasErrors);\n  }\n}\n\nexport default async function* runExecutor(\n  options: VitestExecutorOptions,\n  context: ExecutorContext\n) {\n  const { startVitest } = await (Function(\n    'return import(\"vitest/node\")'\n  )() as Promise<typeof import('vitest/node')>);\n\n  const projectRoot = context.projectGraph.nodes[context.projectName].data.root;\n\n  const nxReporter = new NxReporter(options.watch);\n  const settings = {\n    ...options,\n    root: projectRoot,\n    reporters: [...(options.reporters ?? []), 'default', nxReporter],\n    // if reportsDirectory is not provides vitest will remove all files in the project root\n    // when coverage is enabled in the vite.config.ts\n    ...(options.reportsDirectory\n      ? {\n          coverage: {\n            reportsDirectory: options.reportsDirectory,\n          },\n        }\n      : {}),\n  };\n\n  const ctx = await startVitest(options.mode, [], settings);\n\n  let hasErrors = false;\n\n  const processExit = () => {\n    ctx.exit();\n    if (hasErrors) {\n      process.exit(1);\n    } else {\n      process.exit(0);\n    }\n  };\n\n  if (options.watch) {\n    process.on('SIGINT', processExit);\n    process.on('SIGTERM', processExit);\n    process.on('exit', processExit);\n  }\n\n  for await (const report of nxReporter) {\n    // vitest sets the exitCode = 1 when code coverage isn't met\n    hasErrors =\n      report.hasErrors || (process.exitCode && process.exitCode !== 0);\n  }\n\n  return {\n    success: !hasErrors,\n  };\n}\n"],"names":["runExecutor","NxReporter","Symbol","asyncIterator","hasErrors","deferred","promise","setupDeferred","watch","resolve","Promise","res","onFinished","files","errors","some","f","result","state","length","constructor","options","context","startVitest","Function","projectRoot","projectGraph","nodes","projectName","data","root","nxReporter","settings","reporters","reportsDirectory","coverage","ctx","mode","processExit","exit","process","on","report","exitCode","success"],"mappings":"AAAA;+BAuCA;;aAA+BA;;;AAnC/B,IAAA,AAAMC,aAAN,MAAMA;IAUJ,OAAO,CAACC,OAAOC,aAAa,CAAC,GAAG;QAC9B,GAAG;YACD,MAAMC,YAAY,MAAM,IAAI,CAACC,QAAQ,CAACC,OAAO;YAC7C,MAAM;gBAAEF;YAAU;YAClB,IAAI,CAACG,aAAa;QACpB,QAAS,IAAI,CAACC,KAAK,CAAE;IACvB;IAEQD,gBAAgB;QACtB,IAAIE;QACJ,IAAI,CAACJ,QAAQ,GAAG;YACdC,SAAS,IAAII,QAAQ,CAACC,MAAQ;gBAC5BF,UAAUE;YACZ;YACAF;QACF;IACF;IAEAG,WAAWC,KAAa,EAAEC,MAAkB,EAAE;QAC5C,MAAMV,YACJS,MAAME,IAAI,CAAC,CAACC;gBAAMA;YAAAA,OAAAA,CAAAA,CAAAA,MAAAA,EAAEC,MAAM,YAARD,KAAAA,IAAAA,IAAUE,KAAK,AAAD,MAAM;cAAWJ,CAAAA,iBAAAA,KAAAA,IAAAA,OAAQK,MAAM,AAAD,IAAI;QACpE,IAAI,CAACd,QAAQ,CAACI,OAAO,CAACL;IACxB;IA1BAgB,YAAoBZ,MAAgB;qBAAhBA;QAClB,IAAI,CAACD,aAAa;IACpB;AAyBF;AAEe,gBAAgBP,YAC7BqB,OAA8B,EAC9BC,OAAwB,EACxB;IACA,MAAM,EAAEC,YAAW,EAAE,GAAG,MAAOC,SAC7B;IAGF,MAAMC,cAAcH,QAAQI,YAAY,CAACC,KAAK,CAACL,QAAQM,WAAW,CAAC,CAACC,IAAI,CAACC,IAAI;IAE7E,MAAMC,aAAa,IAAI9B,WAAWoB,QAAQb,KAAK;QAI7Ba;IAHlB,MAAMW,WAAW,aACZX;QACHS,MAAML;QACNQ,WAAW;eAAKZ,CAAAA,aAAAA,QAAQY,SAAS,YAAjBZ,aAAqB,EAAE;YAAG;YAAWU;SAAW;OAG5DV,QAAQa,gBAAgB,GACxB;QACEC,UAAU;YACRD,kBAAkBb,QAAQa,gBAAgB;QAC5C;IACF,IACA,CAAC,CAAC;IAGR,MAAME,MAAM,MAAMb,YAAYF,QAAQgB,IAAI,EAAE,EAAE,EAAEL;IAEhD,IAAI5B,YAAY,KAAK;IAErB,MAAMkC,cAAc,IAAM;QACxBF,IAAIG,IAAI;QACR,IAAInC,WAAW;YACboC,QAAQD,IAAI,CAAC;QACf,OAAO;YACLC,QAAQD,IAAI,CAAC;QACf,CAAC;IACH;IAEA,IAAIlB,QAAQb,KAAK,EAAE;QACjBgC,QAAQC,EAAE,CAAC,UAAUH;QACrBE,QAAQC,EAAE,CAAC,WAAWH;QACtBE,QAAQC,EAAE,CAAC,QAAQH;IACrB,CAAC;IAED,WAAW,MAAMI,UAAUX,WAAY;QACrC,4DAA4D;QAC5D3B,YACEsC,OAAOtC,SAAS,IAAKoC,QAAQG,QAAQ,IAAIH,QAAQG,QAAQ,KAAK;IAClE;IAEA,OAAO;QACLC,SAAS,CAACxC;IACZ;AACF"}